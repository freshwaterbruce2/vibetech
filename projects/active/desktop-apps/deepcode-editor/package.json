{
  "name": "deepcode-editor",
  "version": "1.0.0",
  "description": "AI-powered code editor with DeepSeek integration - A modern alternative to Cursor",
  "keywords": [
    "code editor",
    "AI assistant",
    "DeepSeek",
    "programming",
    "IDE",
    "cursor alternative",
    "monaco editor"
  ],
  "homepage": "https://deepcode.dev",
  "license": "MIT",
  "author": "Fresh Bruce",
  "main": "electron/main.js",
  "scripts": {
    "build": "tsc --project tsconfig.build.relaxed.json && vite build",
    "build:prod": "NODE_ENV=production tsc --project tsconfig.build.json && vite build --mode production",
    "build:analyze": "ANALYZE=true npm run build:prod",
    "build:production": "node scripts/build-production.js",
    "build:production:electron": "node scripts/build-production.js --electron",
    "build:fast": "SKIP_TESTS=true SKIP_LINTING=true node scripts/build-production.js",
    "build:verbose": "VERBOSE=true node scripts/build-production.js",
    "build:strict": "tsc && vite build",
    "build:electron": "npm run build && electron-builder --publish=never",
    "build:electron:publish": "npm run build && electron-builder --publish=always",
    "build:electron:draft": "npm run build && electron-builder --publish=onTagOrDraft",
    "build:types": "tsc --emitDeclarationOnly -p tsconfig.build.json",
    "clean": "rm -rf dist build .tsbuildinfo .tsbuildinfo.node dist/.tsbuildinfo",
    "dev": "concurrently \"npm run dev:web\" \"wait-on http://localhost:3001 && npm run dev:electron\"",
    "dev:electron": "electron electron/main.js",
    "dev:web": "vite",
    "dist": "npm run build:prod && electron-builder --publish=never",
    "dist:all": "npm run build:prod && electron-builder --mac --win --linux --publish=never",
    "dist:mac": "npm run build:prod && electron-builder --mac --publish=never",
    "dist:win": "npm run build:prod && electron-builder --win --publish=never",
    "dist:linux": "npm run build:prod && electron-builder --linux --publish=never",
    "electron:dist": "electron-builder",
    "electron:pack": "electron-builder --dir",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx}\"",
    "hook": "node hooks/index.js",
    "hook:docs": "node hooks/generate-docs.js",
    "hook:format-watch": "node hooks/format-on-save.js",
    "hook:memory": "node hooks/memory-monitor.js",
    "hook:memory-watch": "node hooks/memory-watch.js",
    "hook:performance": "node hooks/performance-monitor.js",
    "hook:pre-commit": "node hooks/pre-commit.js",
    "hook:screenshot": "node hooks/ui-screenshot.js",
    "hook:test-watch": "node hooks/test-watch.js",
    "hook:validate-patterns": "node hooks/web-search-validation.js",
    "hook:validate-tech": "node hooks/tech-stack-validator.js",
    "system:init": "node .claude/unified-development-system.js",
    "system:status": "node .claude/unified-development-system.js status",
    "system:workflow": "node .claude/unified-development-system.js workflow",
    "system:optimize": "node .claude/unified-development-system.js optimize",
    "system:dashboard": "node .claude/unified-development-system.js dashboard",
    "system:report": "node .claude/unified-development-system.js report",
    "agent:feature": "node .claude/unified-development-system.js workflow feature-development",
    "agent:bug": "node .claude/unified-development-system.js workflow bug-resolution",
    "agent:security": "node .claude/unified-development-system.js workflow security-audit",
    "mcp:status": "node .claude/mcp-development-orchestrator.js status",
    "mcp:workflow": "node .claude/mcp-development-orchestrator.js workflow",
    "multiagent:status": "node .claude/multi-agent-workflow.js status",
    "multiagent:workflow": "node .claude/multi-agent-workflow.js workflow",
    "dev:advanced": "npm run system:init && npm run dev",
    "lint": "eslint . --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --fix",
    "package": "npm run build && electron-builder --dir",
    "prepare": "husky install || true",
    "preview": "vite preview",
    "puppeteer:demo": "node scripts/web-automation-demo.js",
    "puppeteer:design": "bash ~/.claude/hooks/puppeteer-automation.sh UserPromptSubmit design",
    "puppeteer:performance": "bash ~/.claude/hooks/puppeteer-automation.sh UserPromptSubmit performance",
    "puppeteer:screenshot": "bash ~/.claude/hooks/puppeteer-automation.sh UserPromptSubmit screenshot",
    "puppeteer:test": "bash ~/.claude/hooks/puppeteer-automation.sh UserPromptSubmit test",
    "setup:hooks": "node scripts/setup-hooks.js",
    "start": "electron electron/main.js",
    "test": "vitest",
    "typecheck": "tsc --noEmit --project tsconfig.build.relaxed.json",
    "typecheck:strict": "tsc --noEmit",
    "typecheck:all": "npm run typecheck && npm run typecheck:build && npm run typecheck:test",
    "typecheck:build": "tsc --noEmit -p tsconfig.build.json",
    "typecheck:test": "tsc --noEmit -p tsconfig.test.json",
    "typecheck:watch": "tsc --noEmit --watch"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.24.3",
    "@modelcontextprotocol/server-puppeteer": "^2025.5.12",
    "@monaco-editor/react": "^4.6.0",
    "@types/crypto-js": "^4.2.2",
    "allotment": "^1.20.2",
    "axios": "^1.7.2",
    "crypto-js": "^4.2.0",
    "electron-is-dev": "^3.0.1",
    "electron-updater": "^6.6.2",
    "electron-window-state": "^5.0.3",
    "eventsource-parser": "^1.1.2",
    "framer-motion": "^11.2.10",
    "immer": "^10.1.1",
    "isomorphic-dompurify": "^2.9.0",
    "lucide-react": "^0.395.0",
    "marked": "^12.0.0",
    "monaco-editor": "^0.50.0",
    "openai": "^4.52.0",
    "react": "19.2.0",
    "react-dom": "19.2.0",
    "react-error-boundary": "^4.0.13",
    "react-hotkeys-hook": "^4.5.0",
    "react-router-dom": "^6.23.1",
    "styled-components": "^6.1.11",
    "zustand": "^4.5.2"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/glob": "^8.1.0",
    "@types/react": "19.2.2",
    "@types/react-dom": "19.2.1",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "@vitejs/plugin-react": "^4.3.1",
    "chokidar": "^3.6.0",
    "concurrently": "^8.2.2",
    "electron": "^30.1.2",
    "electron-builder": "^24.13.3",
    "electron-reload": "^2.0.0-alpha.1",
    "eslint": "^8.57.0",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-react-refresh": "^0.4.20",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "husky": "^8.0.3",
    "jsdom": "^26.1.0",
    "lint-staged": "^16.1.2",
    "prettier": "^3.1.0",
    "puppeteer": "^24.14.0",
    "rollup-plugin-visualizer": "^6.0.3",
    "sort-package-json": "^3.4.0",
    "terser": "^5.43.1",
    "typescript": "^5.5.3",
    "vite": "^7.0.5",
    "vite-bundle-analyzer": "^1.1.0",
    "vite-plugin-compression": "^0.5.1",
    "vite-plugin-electron": "^0.28.7",
    "vitest": "^3.2.4",
    "wait-on": "^7.2.0",
    "webpack-bundle-analyzer": "^4.10.2"
  },
  "build": {
    "appId": "com.deepcode.editor",
    "productName": "DeepCode Editor",
    "copyright": "Copyright Â© 2025 Fresh Bruce. All rights reserved.",
    "compression": "maximum",
    "electronVersion": "30.1.2",
    "directories": {
      "output": "release",
      "buildResources": "build"
    },
    "files": [
      "dist/**/*",
      "electron/**/*.js",
      "node_modules/**/*",
      "!node_modules/.cache/**/*",
      "!node_modules/**/*.{ts,tsx,map}",
      "!node_modules/**/{README,CHANGELOG,HISTORY}.{md,txt}",
      "!node_modules/**/{test,tests,spec,specs,__tests__}/**/*",
      "!node_modules/**/*.d.ts",
      "!**/{.DS_Store,.git,.hg,.svn,CVS,RCS,SCCS,__pycache__,thumbs.db,.gitignore,.gitkeep,.gitattributes,.npmignore,.eslintrc,.eslintignore,.stylelintrc,.stylelintignore,.jshintrc,.flowconfig,.documentup.json,.yarn-metadata.json,.travis.yml,appveyor.yml,.nyc_output,karma.conf.js,wallaby.js,wallaby.conf.js}/**/*"
    ],
    "extraResources": [
      {
        "from": "public/icon.png",
        "to": "icon.png"
      }
    ],
    "mac": {
      "category": "public.app-category.developer-tools",
      "icon": "public/icon.icns",
      "hardenedRuntime": true,
      "gatekeeperAssess": false,
      "entitlements": "build/entitlements.mac.plist",
      "entitlementsInherit": "build/entitlements.mac.plist",
      "target": [
        {
          "target": "dmg",
          "arch": [
            "x64",
            "arm64"
          ]
        },
        {
          "target": "zip",
          "arch": [
            "x64",
            "arm64"
          ]
        }
      ],
      "darkModeSupport": true
    },
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ],
      "artifactName": "${productName}-${version}-${arch}.${ext}"
    },
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64",
            "ia32"
          ]
        },
        {
          "target": "portable",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "public/icon.ico",
      "publisherName": "Fresh Bruce",
      "requestedExecutionLevel": "asInvoker",
      "artifactName": "${productName}-Setup-${version}-${arch}.${ext}"
    },
    "nsis": {
      "oneClick": false,
      "perMachine": false,
      "allowElevation": true,
      "allowToChangeInstallationDirectory": true,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true,
      "shortcutName": "DeepCode Editor",
      "include": "build/installer.nsh",
      "installerIcon": "public/icon.ico",
      "uninstallerIcon": "public/icon.ico",
      "installerHeaderIcon": "public/icon.ico",
      "deleteAppDataOnUninstall": false
    },
    "portable": {
      "artifactName": "${productName}-${version}-Portable.${ext}"
    },
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "deb",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "rpm",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "tar.gz",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "public/icon.png",
      "category": "Development",
      "description": "AI-powered code editor with DeepSeek integration",
      "desktop": {
        "Name": "DeepCode Editor",
        "Comment": "AI-powered code editor",
        "Keywords": "editor;development;ai;code;",
        "StartupWMClass": "deepcode-editor"
      },
      "artifactName": "${productName}-${version}-${arch}.${ext}"
    },
    "deb": {
      "depends": [
        "gconf2",
        "gconf-service",
        "libnotify4",
        "libappindicator1",
        "libxtst6",
        "libnss3"
      ]
    },
    "rpm": {
      "depends": [
        "libXScrnSaver"
      ]
    },
    "appImage": {
      "artifactName": "${productName}-${version}-${arch}.${ext}"
    },
    "publish": {
      "provider": "github",
      "owner": "freshbruce",
      "repo": "deepcode-editor",
      "private": false,
      "releaseType": "release"
    },
    "afterSign": "build/notarize.js",
    "afterPack": "build/afterPack.js",
    "electronDist": "node_modules/electron/dist",
    "nodeGypRebuild": false,
    "buildDependenciesFromSource": false,
    "protocols": [
      {
        "name": "DeepCode Editor Protocol",
        "schemes": [
          "deepcode"
        ]
      }
    ]
  }
}
