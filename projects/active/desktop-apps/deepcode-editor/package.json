{
  "name": "vibe-code-studio",
  "version": "1.0.0",
  "type": "module",
  "description": "Vibe Code Studio - Next-generation AI-powered code editor where innovation meets elegant design",
  "keywords": [
    "code editor",
    "AI assistant",
    "programming",
    "IDE",
    "cursor alternative",
    "monaco editor",
    "vibe code studio"
  ],
  "homepage": "https://vibecodestudio.dev",
  "license": "MIT",
  "author": "Fresh Bruce",
  "scripts": {
    "build": "tsc --project tsconfig.build.relaxed.json && vite build",
    "build:prod": "NODE_ENV=production tsc --project tsconfig.build.json && vite build --mode production",
    "build:analyze": "ANALYZE=true npm run build:prod",
    "build:production": "node scripts/build-production.js",
    "build:fast": "SKIP_TESTS=true SKIP_LINTING=true node scripts/build-production.js",
    "build:verbose": "VERBOSE=true node scripts/build-production.js",
    "build:strict": "tsc && vite build",
    "build:types": "tsc --emitDeclarationOnly -p tsconfig.build.json",
    "clean": "rm -rf dist build .tsbuildinfo .tsbuildinfo.node dist/.tsbuildinfo",
    "dev": "concurrently \"npm run dev:web\" \"npm run electron:dev\"",
    "dev:web": "vite",
    "electron:dev": "wait-on http://localhost:5174 && cross-env NODE_ENV=development VITE_DEV_SERVER_URL=http://localhost:5174 electron electron/main.cjs",
    "electron:build": "npm run build && electron-builder",
    "electron:build:win": "npm run build && electron-builder --win",
    "electron:build:mac": "npm run build && electron-builder --mac",
    "electron:build:linux": "npm run build && electron-builder --linux",
    "electron:dist": "npm run build && electron-builder --publish never",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx}\"",
    "hook": "node hooks/index.js",
    "hook:docs": "node hooks/generate-docs.js",
    "hook:format-watch": "node hooks/format-on-save.js",
    "hook:memory": "node hooks/memory-monitor.js",
    "hook:memory-watch": "node hooks/memory-watch.js",
    "hook:performance": "node hooks/performance-monitor.js",
    "hook:pre-commit": "node hooks/pre-commit.js",
    "hook:screenshot": "node hooks/ui-screenshot.js",
    "hook:test-watch": "node hooks/test-watch.js",
    "hook:validate-patterns": "node hooks/web-search-validation.js",
    "hook:validate-tech": "node hooks/tech-stack-validator.js",
    "system:init": "node .claude/unified-development-system.js",
    "system:status": "node .claude/unified-development-system.js status",
    "system:workflow": "node .claude/unified-development-system.js workflow",
    "system:optimize": "node .claude/unified-development-system.js optimize",
    "system:dashboard": "node .claude/unified-development-system.js dashboard",
    "system:report": "node .claude/unified-development-system.js report",
    "agent:feature": "node .claude/unified-development-system.js workflow feature-development",
    "agent:bug": "node .claude/unified-development-system.js workflow bug-resolution",
    "agent:security": "node .claude/unified-development-system.js workflow security-audit",
    "mcp:status": "node .claude/mcp-development-orchestrator.js status",
    "mcp:workflow": "node .claude/mcp-development-orchestrator.js workflow",
    "multiagent:status": "node .claude/multi-agent-workflow.js status",
    "multiagent:workflow": "node .claude/multi-agent-workflow.js workflow",
    "dev:advanced": "npm run system:init && npm run dev",
    "lint": "eslint src --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint src --fix",
    "prepare": "husky install || true",
    "preview": "vite preview",
    "puppeteer:demo": "node scripts/web-automation-demo.js",
    "puppeteer:design": "bash ~/.claude/hooks/puppeteer-automation.sh UserPromptSubmit design",
    "puppeteer:performance": "bash ~/.claude/hooks/puppeteer-automation.sh UserPromptSubmit performance",
    "puppeteer:screenshot": "bash ~/.claude/hooks/puppeteer-automation.sh UserPromptSubmit screenshot",
    "puppeteer:test": "bash ~/.claude/hooks/puppeteer-automation.sh UserPromptSubmit test",
    "setup:hooks": "node scripts/setup-hooks.js",
    "test": "vitest",
    "test:e2e": "tsx tests/run-e2e-tests.ts",
    "test:e2e:headed": "HEADLESS=false tsx tests/run-e2e-tests.ts",
    "test:verify": "tsx tests/auto-verify.ts",
    "test:all": "pnpm test && pnpm test:e2e",
    "typecheck": "tsc --noEmit --project tsconfig.build.relaxed.json",
    "typecheck:strict": "tsc --noEmit",
    "typecheck:all": "npm run typecheck && npm run typecheck:build && npm run typecheck:test",
    "typecheck:build": "tsc --noEmit -p tsconfig.build.json",
    "typecheck:test": "tsc --noEmit -p tsconfig.test.json",
    "typecheck:watch": "tsc --noEmit --watch"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.24.3",
    "@modelcontextprotocol/server-puppeteer": "^2025.5.12",
    "@monaco-editor/react": "^4.6.0",
    "@types/crypto-js": "^4.2.2",
    "@types/d3": "^7.4.3",
    "allotment": "^1.20.2",
    "axios": "^1.7.2",
    "crypto-js": "^4.2.0",
    "d3": "^7.9.0",
    "eventsource-parser": "^1.1.2",
    "framer-motion": "^11.2.10",
    "immer": "^10.1.1",
    "isomorphic-dompurify": "^2.9.0",
    "js-yaml": "^4.1.0",
    "lucide-react": "^0.395.0",
    "marked": "^12.0.0",
    "minimatch": "^10.0.3",
    "monaco-editor": "^0.50.0",
    "openai": "^4.52.0",
    "react": "19.2.0",
    "react-dom": "19.2.0",
    "react-error-boundary": "^4.0.13",
    "react-hotkeys-hook": "^4.5.0",
    "react-router-dom": "^6.23.1",
    "styled-components": "^6.1.11",
    "zustand": "^4.5.2"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@playwright/test": "^1.56.1",
    "@tauri-apps/cli": "^2.8.4",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/glob": "^8.1.0",
    "@types/js-yaml": "^4.0.9",
    "@types/minimatch": "^6.0.0",
    "@types/react": "19.2.2",
    "@types/react-dom": "19.2.1",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "@vitejs/plugin-react": "^4.3.1",
    "chokidar": "^3.6.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "electron": "^38.3.0",
    "electron-builder": "^26.0.12",
    "eslint": "^8.57.0",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-react-refresh": "^0.4.20",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "husky": "^8.0.3",
    "jsdom": "^26.1.0",
    "lint-staged": "^16.2.4",
    "prettier": "^3.1.0",
    "puppeteer": "^24.14.0",
    "rollup-plugin-visualizer": "^6.0.3",
    "sort-package-json": "^3.4.0",
    "terser": "^5.43.1",
    "typescript": "^5.5.3",
    "vite": "^7.0.5",
    "vite-bundle-analyzer": "^1.1.0",
    "vite-plugin-compression": "^0.5.1",
    "vite-plugin-monaco-editor": "^1.1.0",
    "vitest": "^3.2.4",
    "wait-on": "^7.2.0",
    "webpack-bundle-analyzer": "^4.10.2"
  },
  "main": "electron/main.cjs",
  "build": {
    "appId": "com.deepcode.editor",
    "productName": "DeepCode Editor",
    "directories": {
      "output": "dist-electron",
      "buildResources": "electron/assets"
    },
    "files": [
      "dist/**/*",
      "electron/**/*",
      "!electron/assets/**/*"
    ],
    "win": {
      "target": [
        "nsis",
        "portable"
      ],
      "icon": "electron/assets/icon.ico"
    },
    "mac": {
      "target": [
        "dmg",
        "zip"
      ],
      "icon": "electron/assets/icon.icns",
      "category": "public.app-category.developer-tools"
    },
    "linux": {
      "target": [
        "AppImage",
        "deb"
      ],
      "icon": "electron/assets/icon.png",
      "category": "Development"
    },
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": true,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true
    }
  }
}
