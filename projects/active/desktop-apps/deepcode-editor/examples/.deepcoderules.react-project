# Example .deepcoderules for React Projects
# Copy to your React project root as .deepcoderules

version: "1.0"
description: "React project with TypeScript and Material-UI"

global:
  language: "typescript"
  framework: "react"

  style:
    indentation: "spaces"
    indentSize: 2
    quotes: "single"
    semicolons: false
    lineLength: 80

    naming:
      components: "PascalCase"
      hooks: "camelCase"  # use*, e.g., useAuth
      files: "PascalCase"

  conventions:
    stateManagement: "context"
    preferredPatterns:
      - "Use React.memo for expensive components"
      - "Extract custom hooks for complex state logic"
      - "Use React.lazy for code splitting"

patterns:
  - name: "Pages"
    match:
      directories: ["src/pages"]
    rules:
      conventions:
        preferredPatterns:
          - "Export default component"
          - "Include page-level error boundary"

  - name: "Hooks"
    match:
      files: ["**/use*.ts", "**/use*.tsx"]
    rules:
      comments:
        requireForFunctions: true
        includeExamples: true

aiConfig:
  systemPrompt: "Generate modern React code with hooks and functional components. Use Material-UI components where appropriate."
  contextInstructions:
    - "Prefer functional components with hooks"
    - "Use Material-UI components and theming"
    - "Include accessibility attributes"
