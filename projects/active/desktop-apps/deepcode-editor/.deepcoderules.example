# DeepCode Editor Custom Rules
# Place this file as .deepcoderules in your workspace root

version: "1.0"
description: "DeepCode Editor workspace-level custom instructions"

metadata:
  author: "Your Name"
  created: "2025-10-21"
  tags: ["typescript", "react", "vite"]

global:
  language: "typescript"
  framework: "react"

  style:
    indentation: "spaces"
    indentSize: 2
    quotes: "single"
    semicolons: true
    trailingComma: true
    lineLength: 100
    naming:
      variables: "camelCase"
      functions: "camelCase"
      classes: "PascalCase"
      constants: "SCREAMING_SNAKE_CASE"
      files: "kebab-case"
      components: "PascalCase"

  conventions:
    errorHandling: "async-await"
    asyncPattern: "async-await"
    stateManagement: "zustand"
    testingFramework: "vitest"
    maxFunctionLength: 50
    maxFileLength: 500
    preferredPatterns:
      - "Use functional components over class components"
      - "Prefer composition over inheritance"
      - "Use custom hooks for reusable logic"
    avoidedPatterns:
      - "console.log in production code"
      - "any type usage"
      - "Inline styles"

  imports:
    order: ["builtin", "external", "internal", "parent", "sibling", "index"]
    grouping: true
    sortWithinGroups: true
    preferredImportStyle: "named"
    pathAliases:
      "@/components": "./src/components"
      "@/services": "./src/services"
      "@/hooks": "./src/hooks"

  comments:
    style: "tsdoc"
    requireForFunctions: true
    requireForClasses: true
    requireForComplexLogic: true
    includeExamples: true
    includeTypeInfo: true

  formatting:
    bracesStyle: "same-line"
    spaceBeforeFunctionParen: false
    arrowParens: "always"
    endOfLine: "lf"

  prohibited:
    keywords: ["eval", "with"]
    imports: ["lodash"]
    reason: "Use native ES6 features instead"

patterns:
  - name: "React Components"
    description: "Rules for React component files"
    priority: 10
    match:
      extensions: ["tsx"]
      directories: ["src/components"]
    rules:
      conventions:
        preferredPatterns:
          - "Export component as named export"
          - "Use styled-components for styling"
          - "Include prop types interface"
      comments:
        requireForFunctions: true

  - name: "Services"
    description: "Rules for service layer"
    priority: 8
    match:
      extensions: ["ts"]
      directories: ["src/services"]
    rules:
      conventions:
        preferredPatterns:
          - "Use classes for services"
          - "Include error handling in all async methods"
      comments:
        requireForClasses: true
        requireForFunctions: true

  - name: "Test Files"
    description: "Rules for test files"
    priority: 5
    match:
      files: ["**/*.test.ts", "**/*.test.tsx"]
    rules:
      conventions:
        preferredPatterns:
          - "Use describe/it blocks"
          - "Include setup and teardown"
          - "Mock external dependencies"

aiConfig:
  model: "auto"
  temperature: 0.7
  maxTokens: 2000
  completionStyle: "balanced"
  includeComments: true
  includeTypes: true
  suggestRefactoring: true
  suggestTests: true
  systemPrompt: "You are an expert TypeScript and React developer. Follow best practices and write clean, maintainable code."
  contextInstructions:
    - "Always include TypeScript types"
    - "Use functional programming patterns where appropriate"
    - "Prefer immutability"
    - "Write self-documenting code with clear variable names"
