name: TypeScript Quality Check

# Purpose: Prevent TypeScript errors from being merged into main branch
# Last Updated: October 16, 2025

on:
  pull_request:
    branches: [main, master, develop]
  push:
    branches: [main, master, develop]

jobs:
  typescript-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run TypeScript type check
        run: pnpm typecheck

      - name: Comment on PR (on failure)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ TypeScript type check failed. Please run `pnpm typecheck` locally and fix all errors before pushing.'
            })

  eslint-check:
    name: ESLint Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm lint

  format-check:
    name: Prettier Format Check
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check code formatting
        run: pnpm format:check

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [typescript-check, eslint-check]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/
          retention-days: 7

  test-check:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [typescript-check]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test:coverage

      - name: Upload coverage reports
        if: always()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  all-checks-passed:
    name: All Quality Checks Passed
    runs-on: ubuntu-latest
    needs: [typescript-check, eslint-check, format-check, build-check, test-check]
    if: always()

    steps:
      - name: Check all jobs
        run: |
          if [ "${{ needs.typescript-check.result }}" != "success" ] || \
             [ "${{ needs.eslint-check.result }}" != "success" ] || \
             [ "${{ needs.format-check.result }}" != "success" ] || \
             [ "${{ needs.build-check.result }}" != "success" ] || \
             [ "${{ needs.test-check.result }}" != "success" ]; then
            echo "❌ One or more quality checks failed"
            exit 1
          fi
          echo "✅ All quality checks passed"
